//---------------------------Surfaces.txt--------------------------
//Surfaces.txt is the backbone of the shell you make for your ghost. 

//MAKE SURE ALL YOUR IMAGES ARE THE SAME SIZE. The image dimensions just need to be consistent throughout for each character, because believe me, it will make things MUCH, MUCH easier for you from this point on if you do that.

//ONE MORE NOTE - If you are planning on doing a single person ghost without a sidekick character at all, all you have to do is save a blank png over all the files for the secondary character, ESPECIALLY Surface10.png. Don't delete Surface10.png or Surface10 in general.



//--The Main Character's Poses---------------------------------------------------------

surface0
//surface0 is the basic default pose for your main character.
{
collision0,57,22,112,46,Head
collision1,65,50,105,91,Face

//Collisions define "hot spots" on your ghost where the user can pet or double click them (as defined in mouse.dic).
//The four numbers after that are x/y coordinates. Specifically, the first two numbers are the x/y coordinates of the TOP LEFT corner of your hotspot. The third and fourth numbers are the coordinates of the BOTTOM RIGHT corner of the hotspot.
//After that, you have to name the area you highlighted. In collision0's case, the area is named "Head". If you go into mouse.dic, you'll see that this name is referenced when the mouse is over that area or interacting with it.

//Collisions only apply to the Surface they're in, unless they're appended using surface.append at the bottom of this file. 

element0,overlay,surface0.png,0,0


//*********************Advanced User Info*******************************
//An element doesn't need to be the first frame of an animation, it can also be the last one. This can come in handy for certain animations that only run once.
//***********************************************************************


//--Blinking---------------------------------------------------------------------------
//Here's the animation block to set up a random blink.

0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,1002,5,overlayfast,0,0
0pattern2,1001,10,overlayfast,0,0
0pattern3,-1,3,overlay,0,0

//--Talking-----------------------------------------------------------------------------
//This block deals with your ghost's mouth moving as it speaks to you. 

1interval,talk,4
1pattern0,0,0,alternativestart,[2.3.4]

//The interval is set to talk,4, which means it'll run for every four characters or so that appear in the balloon.

2interval,never
2pattern0,1102,10,overlay,0,0
2pattern1,1101,13,overlay,0,0
2pattern2,-1,10,overlay,0,0

3interval,never
3pattern0,1101,14,overlay,0,0
3pattern1,-1,10,overlay,0,0

4interval,never
4pattern0,1102,14,overlay,0,0
4pattern1,-1,10,overlay,0,0

//IMPORTANT NOTE: IF YOU'RE DOING A PROFILE VIEW AND YOUR MOUTH IS MOVING OUTSIDE THE BODY then you're going to need to use Replace instead. I'm sorry for your loss.
}

//Main Character Embarrassed pose
surface1
{
element0,overlay,surface1501.png,0,0
}

//Main Character Surprised pose
surface2
{
element0,overlay,surface1502.png,0,0
}

//Main Character Worried pose
surface3
{
element0,overlay,surface1503.png,0,0
}

//Main Character Sad/Disappointed pose
surface4
{
element0,overlay,surface1504.png,0,0
}

//Main Character Smiling pose
surface5
{
element0,overlay,surface1505.png,0,0
}

//Main Character Contented pose
surface6
{
element0,overlay,surface1506.png,0,0
}

//Main Character Angry pose
surface7
{
element1,overlay,surface1507.png,0,0
}

//Main Character Thoughtful Pose
surface8
{
element1,overlay,surface1508.png,0,0
}

//Main Character Bored pose
surface9
{
element1,overlay,surface1509.png,0,0
}


//--The Side Character's poses------------------

surface10
{
collision0,58,199,85,218,Face
collision1,96,128,140,162,Point


element0,overlay,surface10.png,0,0

//Blinking
0interval,random,4
0pattern0,-1,10,overlay,0,0
0pattern1,2002,5,overlayfast,0,0
0pattern2,2001,10,overlayfast,0,0
0pattern3,-1,3,overlay,0,0


//1interval,talk,4
//1pattern0,0,0,alternativestart,[2.3.4]

//2interval,never
//2pattern0,1102,10,overlay,0,0
//2pattern0,1101,13,overlay,0,0
//2pattern1,-1,10,overlay,0,0

//3interval,never
//3pattern0,1101,14,overlay,0,0
//3pattern1,-1,10,overlay,0,0

//4interval,never
//4pattern0,1102,14,overlay,0,0
//4pattern1,-1,10,overlay,0,0
}


//Side Character Embarrassed pose
surface11
{
element1,overlay,surface2501.png,0,0
}

//Side Character Surprised pose
surface12
{
element1,overlay,surface2502.png,0,0
}

//Side Character Worried pose
surface13
{
element1,overlay,surface2503.png,0,0
}

//Side Character Sad/Disappointed pose
surface14
{
element1,overlay,surface2504.png,0,0
}

//Side Character Smiling pose
surface15
{
element1,overlay,surface2505.png,0,0
}

//Side Character Contented pose
surface16
{
element1,overlay,surface2506.png,0,0
}

//Side Character Angry pose
surface17
{
element1,overlay,surface2507.png,0,0
}

//Side Character Thoughtful pose
surface18
{
element1,overlay,surface2508.png,0,0
}

//Side Character Bored pose
surface19
{
element1,overlay,surface2509.png,0,0
}



//--surface.append-------------------------------------------------------------------
//Surface.append basically applies the coding within the brackets to the poses specified in the number range. Specifically in this case it applies to collisions. If the collision areas for your ghost don't change very much from pose to pose, then you can set them here for multiple surfaces at once and save yourself some time.

surface.append500-590 //this is appending this code to Surface500 through Surface590.
//surface.append500-590,205 would append the code to Surface500 to Surface590, as well as Surface205. 
//surface.append500-590,205,!507-509 it would do the same, except it would skip Surfaces507 through 509.
//you can have multiple surface.appends as well, if you want to append one set of code to one range of surfaces and another to another. For example, one set of collisions to your main character and one to your side character.
{
collision0,15,16,111,48,Face
collision1,40,50,102,84,Point

//Make sure to put surface.append at the end of your file, so it can append the values to surfaces that exist.

//--bind-------------------------------------------------------------------------------

//Bind is an interval function only used for dress-up items, therefore if your ghost has no dress-up items, you will not need to bind anything and can safely disregard this. See the walkthrough page about clothing for more details about bind.

//51interval,bind
//51pattern0,999,2,add,0,0

//One final note on bind, note that it is also under surface.append along with the collisions up there. Meaning that this clothing would bind across those multiple surfaces just like the collisions.

//You can use surface.append to technically apply anything across multiple poses, I'm pretty sure... even images. I haven't messed with this too much myself, but I'm pretty sure it's possible.
}


//--Unique Collision cursors------------------

//sakura.cursor 
//{ 
//mouseup0,Head,system:hand 
//mousedown0,Head,system:finger 
//mouseup1,Face,system:hand 
//mousedown1,Face,system:grip 
//} 

//What this does is change the mouse cursor. You can see it's split into mouseup and mousedown, and it uses the names you gave your Collisions up there. So when the mouse is hovering over Girl's head, it uses the system cursor that looks like a hand. When you click and hold, it looks like a finger. You can keep adding unique cursors for all your collisions by sequentially numbering them, like mouseup/down2, mouseup/down3, and so on.

//The system cursors you can use for this are "arrow", "cross", "no", "hand", "grip", "finger", "wait", "text", "move", and "help".

//To set this up for the secondary character, just change sakura to kero, as usual.


//--Tooltips------------------

//Maybe you'd like a tooltip to pop up when your user is hovering over a hitbox on your ghost. It works much the same as above!

//sakura.tooltips 
//{ 
//Head,This is Girl's head. 
//Face,This is Girl's face.  
//}

//Basically put the name of your collision first, then what you want the tooltip to say.
//Like above, replace sakura with kero for the secondary character.



//--Surface.alias------------------


//There is another function along the same lines of surface.append and it's surface.alias. What it does is assign a range of numbers to a single number or word that can be called using \s[].

//sakura.surface.alias
//{
//6666,[1229,1230,1231,1235]
//}

//What this means is that I could then go \s[6666] in dialogue and it would call any of these four Surfaces in the brackets. You can do words as well, like creepy,[1229,1230,1231,1235], and then you could call it with \s[creepy]. This may sound like a convenient shortcut to using words instead of numbers for your ghost's expressions, but I'd probably stick with numbers, really. It just feels like it'd backfire on you eventually.
//You can do the same thing with the side character by using kero instead of sakura.

//kero.surface.alias
//{
//6667,[1228,1232,1233]
//6668,[1228,1232,1233,1234]
//}
//And as you can see, you can have multiple surface aliases set up at any point. In this example, kero has both 6667 and 6668 defined as a range of Surfaces. So \s[6667] would call one of those three Surfaces, and \s[6668] would call one of those four Surfaces.

//---



//*********************More on SERIKO coding*******************************

//You can read about these on the SERIKO page on the walkthrough as well with (presumably) easier formatting on the eyes lol. Actually since this is supposed to be trimmed down I'm just going to cut the whole thing and tell you to go to the seriko page on the site.

//***********************************************************************